{"version":3,"sources":["index/index.js"],"names":["Vue","el","data","_this","this","checkAge","rule","value","callback","Error","setTimeout","Number","isInteger","ruleForm2","pass","checkPass","age","rules2","validator","$refs","validateField","trigger","methods","submitForm","formName","validate","valid","console","log","alert","resetForm","resetFields"],"mappings":"YAEA,IAAIA,MACFC,GAAI,OACJC,KAAM,WAAU,GAAAC,GAAAC,KACXC,EAAW,SAACC,EAAMC,EAAOC,GAC5B,IAAKD,EACH,MAAOC,GAAS,GAAIC,OAAM,UAE5BC,YAAW,WACJC,OAAOC,UAAUL,GAGhBA,EAAQ,GACVC,EAAS,GAAIC,OAAM,YAEnBD,IALFA,EAAS,GAAIC,OAAM,YAQpB,KAqBL,QACEI,WACEC,KAAM,GACNC,UAAW,GACXC,IAAK,IAEPC,QACEH,OACII,UA3BW,SAACZ,EAAMC,EAAOC,GACjB,KAAVD,EACFC,EAAS,GAAIC,OAAM,WAEc,KAA7BN,EAAKU,UAAUE,WACjBZ,EAAKgB,MAAMN,UAAUO,cAAc,aAErCZ,MAoB6Ba,QAAS,SAEtCN,YACIG,UApBY,SAACZ,EAAMC,EAAOC,GAClB,KAAVD,EACFC,EAAS,GAAIC,OAAM,YACVF,IAAUJ,EAAKU,UAAUC,KAClCN,EAAS,GAAIC,OAAM,eAEnBD,KAc8Ba,QAAS,SAEvCL,MACIE,UAAWb,EAAUgB,QAAS,YAKtCC,SACIC,WADK,SACMC,GACTpB,KAAKe,MAAMK,GAAUC,SAAS,SAACC,GAC7B,IAAIA,EAIF,MADAC,SAAQC,IAAI,mBACL,CAHPC,OAAM,cAOZC,UAXK,SAWKN,GACRpB,KAAKe,MAAMK,GAAUO","file":"index.babel.min.js","sourcesContent":["// demo \r\n\r\nnew Vue({\r\n  el: '#app',\r\n  data: function(){\r\n  \tvar checkAge = (rule, value, callback) => {\r\n    if (!value) {\r\n      return callback(new Error('年龄不能为空'));\r\n    }\r\n    setTimeout(() => {\r\n      if (!Number.isInteger(value)) {\r\n        callback(new Error('请输入数字值'));\r\n      } else {\r\n        if (value < 18) {\r\n          callback(new Error('必须年满18岁'));\r\n        } else {\r\n          callback();\r\n        }\r\n      }\r\n    }, 1000);\r\n  };\r\n  var validatePass = (rule, value, callback) => {\r\n    if (value === '') {\r\n      callback(new Error('请输入密码'));\r\n    } else {\r\n      if (this.ruleForm2.checkPass !== '') {\r\n        this.$refs.ruleForm2.validateField('checkPass');\r\n      }\r\n      callback();\r\n    }\r\n  };\r\n  var validatePass2 = (rule, value, callback) => {\r\n    if (value === '') {\r\n      callback(new Error('请再次输入密码'));\r\n    } else if (value !== this.ruleForm2.pass) {\r\n      callback(new Error('两次输入密码不一致!'));\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n  return {\r\n    ruleForm2: {\r\n      pass: '',\r\n      checkPass: '',\r\n      age: ''\r\n    },\r\n    rules2: {\r\n      pass: [\r\n        { validator: validatePass, trigger: 'blur' }\r\n      ],\r\n      checkPass: [\r\n        { validator: validatePass2, trigger: 'blur' }\r\n      ],\r\n      age: [\r\n        { validator: checkAge, trigger: 'blur' }\r\n      ]\r\n    }\r\n  };\r\n  },\r\n  methods: {\r\n      submitForm(formName) {\r\n        this.$refs[formName].validate((valid) => {\r\n          if (valid) {\r\n            alert('submit!');\r\n          } else {\r\n            console.log('error submit!!');\r\n            return false;\r\n          }\r\n        });\r\n      },\r\n      resetForm(formName) {\r\n        this.$refs[formName].resetFields();\r\n      }\r\n    }\r\n})"]}